{"version":3,"sources":["webpack:///./src/app/services/plugin-service.service.ts","webpack:///./src/app/tab5/tab5.module.ts","webpack:///./src/app/tab5/tab5.page.html","webpack:///./src/app/tab5/tab5.page.scss","webpack:///./src/app/tab5/tab5.page.ts"],"names":[],"mappings":"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","file":"tab5-tab5-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { cordova, IonicNativePlugin } from '@ionic-native/core'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PluginServiceService extends IonicNativePlugin {\n\n  //name in package.json file of plugin\n  static pluginName = 'arplugin'; \n  // plugin id in the plugin.xml of plugin\n  static plugin = 'cordova-plugin-arplugin';\n  // clobbers target in the plugin.xml of plugin\n  static pluginRef = 'ArPlugin';\n  static repo = 'https://github.com/patilkunal-82/arplugin.git';\n  static platforms = ['iOS'];\n\n  add(num1, num2): Promise<any> {\n    return cordova(this, 'add', {}, [{ param1: num1, param2: num2 }]);\n  }\n\n  getContacts(): Promise<any> {\n    return cordova(this, 'getContacts', {}, [{}]);\n  }\n\n  viewAR(bookID): Promise<any> {\n    return cordova(this, 'viewAR', {}, [{param1: bookID}]);\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { IonicImageLoaderModule } from 'ionic-image-loader-v5';\n\nimport { Tab5Page } from './tab5.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab5Page\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    IonicImageLoaderModule\n  ],\n  declarations: [Tab5Page]\n})\nexport class Tab5PageModule {}\n","module.exports = \"<ion-header color=\\\"success\\\" [translucent]=\\\"true\\\" collapse=\\\"condense\\\">\\n  <ion-toolbar >\\n    <ion-title size=\\\"large\\\" \\n               style=\\\"font:xx-large; font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\n               color: #FDFEFE  ; font-weight: bolder; font-size: 25px;\\\">\\n     Immerse\\n    </ion-title>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"close()\\\"><ion-icon name=\\\"close\\\" slot=\\\"icon-only\\\"></ion-icon></ion-button>\\n    </ion-buttons>\\n\\n  </ion-toolbar>\\n</ion-header> \\n\\n<ion-content>\\n   \\n      \\n        <!--<div id=\\\"container\\\">\\n          <ion-button (click)=\\\"add()\\\">Add Numbers</ion-button>\\n            <ion-list>\\n              <ion-item>{{total}}</ion-item>\\n            </ion-list>\\n        </div>-->\\n\\n        \\n         <!--<ion-button expand=\\\"full\\\" (click)=\\\"loadContacts()\\\">\\n            Load Contacts\\n          </ion-button>-->\\n         \\n          <!--<ion-list>\\n            <ion-item *ngFor=\\\"let c of contacts\\\">\\n              <ion-label>\\n                {{ c.firstName }} {{ c.lastName }}\\n                <p>\\n                  {{ c.telephone }}\\n                </p>\\n              </ion-label>\\n            </ion-item>\\n          </ion-list>-->\\n\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let book of books\\\">\\n        <img-loader class=\\\"bookimage\\\" [src]=\\\"(bookIdImageMap.get(book._id))\\\"  \\n        useImg (load)=\\\"onImageLoad($event)\\\" button>\\n        </img-loader>\\n        <ion-button  shape=\\\"round\\\" style=\\\"color: #145A32\\\" margin expand=\\\"block\\\"  (click)=\\\"viewAR(book._id)\\\">View AR</ion-button>\\n        <p></p>\\n        <ion-button  shape=\\\"round\\\" style=\\\"color: #145A32\\\" margin expand=\\\"block\\\" (click)=\\\"viewAnchors()\\\">View Anchor Index</ion-button>\\n     </ion-item>\\n    </ion-list>\\n\\n      \\n\\n          \\n         \\n          \\n   \\n\\n</ion-content> \\n\\n \\n\\n\\n\"","module.exports = \"ion-toolbar {\\n  --background: #145A32; }\\n\\niframe {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  border: none; }\\n\\n.bookimage {\\n  width: 225%;\\n  height: auto;\\n  margin: 10px auto; }\\n\\nion-button {\\n  --background: #E9F7EF   ; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9rdW5hbHBhdGlsL1BlcnNvbmFsRmFtaWx5L1dvcmtSZWxhdGVkL1Byb2dyYW1taW5nL0lvbmljL1JlYWRBUnNfSW9uaWMvc3JjL2FwcC90YWI1L3RhYjUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUkscUJBQWEsRUFBQTs7QUFHakI7RUFDSSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7RUFDWixZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksV0FBVztFQUVYLFlBQVk7RUFFWixpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSx3QkFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvdGFiNS90YWI1LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi10b29sYmFyIHtcbiAgICAvLy0tYmFja2dyb3VuZDogIzFCNEY3MjtcbiAgICAtLWJhY2tncm91bmQ6ICMxNDVBMzI7XG59XG5cbmlmcmFtZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBib3JkZXI6IG5vbmU7XG59XG5cbi5ib29raW1hZ2Uge1xuICAgIHdpZHRoOiAyMjUlO1xuICAgIC8vaGVpZ2h0OiBhdXRvO1xuICAgIGhlaWdodDogYXV0bztcbiAgICAvL21hcmdpbi10b3A6IDI1dmg7XG4gICAgbWFyZ2luOiAxMHB4IGF1dG87XG4gIH1cblxuICBpb24tYnV0dG9uIHtcbiAgICAtLWJhY2tncm91bmQ6ICNFOUY3RUYgICA7XG4gIH1cblxuIl19 */\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { PluginServiceService } from '../services/plugin-service.service'\nimport { AlertController } from '@ionic/angular';\nimport { ImageLoaderService } from 'ionic-image-loader-v5';\n\nimport { ReadarsService} from '../services/readars.service';\nimport { BooksService } from '../services/books.service';\n\nimport { DomSanitizer, SafeResourceUrl, SafeUrl} from '@angular/platform-browser';\nimport { Book } from '../shared/book';\n\n\n@Component({\n  selector: 'app-tab5',\n  templateUrl: './tab5.page.html',\n  styleUrls: ['./tab5.page.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class Tab5Page implements OnInit {\n\n  total;\n  contacts = [];\n  images = [];\n  bookImages: Array<any>;\n  books: Book[] = [];\n  recobooks: Book[] = [];\n  bookGenreCollection: Book[] = [];\n  bookLanguageCollection: Book[] = [];\n  bookIds: Book[];\n  bookList: Book[];\n  errMess: string;\n  username: string;\n  category: string;\n\n  showGenre: boolean;\n  showLanguage: boolean;\n\n\n  public bookIdsImages = new Map();\n  public bookIdImageMap = new Map();\n  lbookIds: any[];\n  public url: SafeResourceUrl;\n  \n  constructor(private modalCtrl: ModalController, \n    public pluginService: PluginServiceService, \n    public alertController: AlertController,\n    public readarsService: ReadarsService,\n    private imageLoaderService: ImageLoaderService,\n    private booksService: BooksService)\n     \n  {  }\n\n  ngOnInit() {\n\n    this.readarsService.getBooks()\n    .subscribe(books => {\n      this.books = books;\n      this.prepareBookIdsImagesMap();\n      console.log(\"BOOK COLLECTION IS ---------->\", this.books)\n    }, errmess => this.errMess = <any>errmess);\n\n  }\n\n  prepareBookIdsImagesMap() {\n\n    // get all the  bookIds\n    // for every  bookID get the corresponding imageURL\n    // store image URL against the bookID in a map\n    // when displaying a view, for every book Id(key), get corresponding img url(value) from the map\n\n    this.readarsService.getBookIds().subscribe(bookIds => {\n      this.bookIds = bookIds;\n      this.storeBookIds(this.bookIds);\n      this.lbookIds = this.loadBookIds();\n      for (let i=0; i < this.lbookIds.length; i++) {\n        this.readarsService.getBookImage(this.lbookIds[i])\n        .subscribe(x => {\n            this.url = x;\n            console.log(\"this.url\", this.url);\n            this.bookIdImageMap.set(this.lbookIds[i], this.url);\n            console.log(\"book image map\", this.bookIdImageMap);\n        }, errMess => console.log(errMess));\n      }\n    }, errmess => this.errMess = <any>errmess);\n  }\n\n  onImageLoad(event) {\n    console.log(\"image ready\");\n  }\n\n  storeBookIds(bookIds: any[]) {\n    console.log('BookIds stored are :', bookIds);\n    localStorage.setItem('bookIds', JSON.stringify(bookIds));\n  }\n\n  loadBookIds() {\n    this.bookIds = JSON.parse(localStorage.getItem('bookIds'));\n    console.log('bookIds ', this.bookIds);\n    if (this.bookIds) {\n      return this.bookIds;\n    }\n    return;\n  }\n\n  async viewAR(bookID: string) {\n\n    console.log(\"bookID is \", bookID)\n\n\n    /*this.booksService.uploadMarkerImage(this.bookId, this.uploadData)\n    .subscribe(res => {\n      console.log(\"Uploaded image details ----->\",res);\n    });*/\n\n    this.booksService.getAnchorAndContent(bookID)\n    .subscribe(res => {\n      console.log(\"anchor and content data for book id\", bookID);\n      console.log(res);\n      this.pluginService.viewAR(bookID);\n    });\n\n    \n  }\n\n  viewAnchors() {\n\n  }\n\n\nclose() {\n  this.modalCtrl.dismiss();\n}\n\n\n  add() {\n     this.pluginService.add(5,3).then((data) => {\n      this.total = data;\n      this.presentAlert('The sum is ' + data);\n    }).catch((error) => console.error('add' + error));\n  }\n\n  async loadContacts() {\n  \n    this.contacts = await this.pluginService.getContacts();\n    console.log(\"my contacts\", this.contacts);\n  }\n    \n  async presentAlert(alertMsg: string) {\n    const alert = await this.alertController.create({\n      subHeader: 'Alert',\n      message: alertMsg,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  \n  \n\n}\n"],"sourceRoot":""}